cmake_minimum_required(VERSION 3.16.0 FATAL_ERROR)

project(FSMlib CXX)
set(CXX_STANDARD 17)
set(CXX_STANDARD_REQUIRED ON)

################################################################################
# Set target arch type if empty. Visual studio solution generator provides it.
################################################################################
# if(NOT CMAKE_VS_PLATFORM_NAME)
#     set(CMAKE_VS_PLATFORM_NAME "x64")
# endif()
# message("${CMAKE_VS_PLATFORM_NAME} architecture in use")

# if(NOT ("${CMAKE_VS_PLATFORM_NAME}" STREQUAL "Mixed Platforms"
#      OR "${CMAKE_VS_PLATFORM_NAME}" STREQUAL "Win32"
#      OR "${CMAKE_VS_PLATFORM_NAME}" STREQUAL "x64"))
#     message(FATAL_ERROR "${CMAKE_VS_PLATFORM_NAME} arch is not supported!")
# endif()
# set(CMAKE_PLAT)

################################################################################
# Global configuration types
################################################################################
set(CMAKE_CONFIGURATION_TYPES
    "Debug"
    "Release"
    CACHE STRING "" FORCE
)

################################################################################
# Global compiler options
################################################################################
if(MSVC)
    # remove default flags provided with CMake for MSVC
    set(CMAKE_CXX_FLAGS "")
    set(CMAKE_CXX_FLAGS_DEBUG "")
    set(CMAKE_CXX_FLAGS_RELEASE "")
endif()

################################################################################
# Global linker options
################################################################################
if(MSVC)
    # remove default flags provided with CMake for MSVC
    set(CMAKE_EXE_LINKER_FLAGS "")
    set(CMAKE_MODULE_LINKER_FLAGS "")
    set(CMAKE_SHARED_LINKER_FLAGS "")
    set(CMAKE_STATIC_LINKER_FLAGS "")
    set(CMAKE_EXE_LINKER_FLAGS_DEBUG "${CMAKE_EXE_LINKER_FLAGS}")
    set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "${CMAKE_MODULE_LINKER_FLAGS}")
    set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "${CMAKE_SHARED_LINKER_FLAGS}")
    set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "${CMAKE_STATIC_LINKER_FLAGS}")
    set(CMAKE_EXE_LINKER_FLAGS_RELEASE "${CMAKE_EXE_LINKER_FLAGS}")
    set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "${CMAKE_MODULE_LINKER_FLAGS}")
    set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "${CMAKE_SHARED_LINKER_FLAGS}")
    set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "${CMAKE_STATIC_LINKER_FLAGS}")
endif()

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++17")

################################################################################
# Nuget packages function stub.
################################################################################
function(use_package TARGET PACKAGE VERSION)
    message(WARNING "No implementation of use_package. Create yours. "
                    "Package \"${PACKAGE}\" with version \"${VERSION}\" "
                    "for target \"${TARGET}\" is ignored!")
endfunction()

################################################################################
# Common utils
################################################################################
# include(CMake/Utils.cmake)

################################################################################
# Additional Global Settings(add specific info there)
################################################################################
# include(CMake/GlobalSettingsInclude.cmake OPTIONAL)

################################################################################
# Use solution folders feature
################################################################################
set_property(GLOBAL PROPERTY USE_FOLDERS ON)

################################################################################
# Sub-projects
################################################################################
# add_subdirectory(BBport)
add_subdirectory(FSMdevel)
add_subdirectory(FSMlib)
# add_subdirectory(FSMlibCUDA)
# add_subdirectory(FSMlibTest)
# add_subdirectory(FSMlibTestCUDA)

